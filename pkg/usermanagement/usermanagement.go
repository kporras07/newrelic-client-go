package usermanagement

import (
	"github.com/newrelic/newrelic-client-go/v2/internal/http"
	"github.com/newrelic/newrelic-client-go/v2/pkg/config"
	"github.com/newrelic/newrelic-client-go/v2/pkg/logging"
)

type Usermanagement struct {
	client http.Client
	logger logging.Logger
	config config.Config
}

func New(config config.Config) Usermanagement {
	client := http.NewClient(config)

	pkg := Usermanagement{
		client: client,
		logger: config.GetLogger(),
		config: config,
	}
	return pkg
}

// The following types should have been generated by tutone, somehow that didn't happen.

type MultiTenantIdentityGroupFilterInput struct {
	// Filter by allow capability.
	AllowsCapability *MultiTenantIdentityGroupAllowCapabilityInput `json:"allowsCapability,omitempty"`
	// Filter by authentication domain.
	AuthenticationDomainId *MultiTenantIdentityGroupAuthenticationDomainInput `json:"authenticationDomainId,omitempty"`
	// Filter by ID.
	ID *MultiTenantIdentityGroupIDInput `json:"id,omitempty"`
	// Filter by members.
	Members *MultiTenantIdentityGroupMembersInput `json:"members,omitempty"`
	// Filter by name.
	Name *MultiTenantIdentityGroupNameInput `json:"name,omitempty"`
	// Filter by organization ID.
	OrganizationID *MultiTenantIdentityGroupOrganizationIDInput `json:"organizationId,omitempty"`
}

type MultiTenantIdentityGroupAllowCapabilityInput struct {
	// A capability
	In MultiTenantIdentityGroupAllowCapabilityEnum `json:"in,omitempty"`
}

// OrganizationOrganizationCreateJobResultStatusEnum - The possible status values for job results
type MultiTenantIdentityGroupAllowCapabilityEnum string

var MultiTenantIdentityGroupAllowCapabilityEnumTypes = struct {
	DELETE_GROUP            MultiTenantIdentityGroupAllowCapabilityEnum
	GRANT_GROUP_MEMBERSHIP  MultiTenantIdentityGroupAllowCapabilityEnum
	REVOKE_GROUP_MEMBERSHIP MultiTenantIdentityGroupAllowCapabilityEnum
	UPDATE_GROUP_NAME       MultiTenantIdentityGroupAllowCapabilityEnum
}{
	DELETE_GROUP:            "DELETE_GROUP",
	GRANT_GROUP_MEMBERSHIP:  "GRANT_GROUP_MEMBERSHIP",
	REVOKE_GROUP_MEMBERSHIP: "REVOKE_GROUP_MEMBERSHIP",
	UPDATE_GROUP_NAME:       "UPDATE_GROUP_NAME",
}

type MultiTenantIdentityGroupAuthenticationDomainInput struct {
	Eq string `json:"eq,omitempty"`
}

type MultiTenantIdentityGroupIDInput struct {
	Eq string `json:"eq,omitempty"`
}

type MultiTenantIdentityGroupMembersInput struct {
	Contains string `json:"contains,omitempty"`
}

type MultiTenantIdentityGroupNameInput struct {
	Eq       string `json:"eq,omitempty"`
	Contains string `json:"contains,omitempty"`
}

type MultiTenantIdentityGroupOrganizationIDInput struct {
	Eq string `json:"eq,omitempty"`
}

type MultiTenantIdentityGroupSortInput struct {
	Direction MultiTenantIdentityGroupSortDirectionEnum `json:"direction,omitempty"`
	Key       MultiTenantIdentityGroupSortKeyEnum       `json:"key,omitempty"`
}

type MultiTenantIdentityGroupSortDirectionEnum string

var MultiTenantIdentityGroupSortDirectionEnumTypes = struct {
	ASCENDING  MultiTenantIdentityGroupSortDirectionEnum
	DESCENDING MultiTenantIdentityGroupSortDirectionEnum
}{
	ASCENDING:  "ASCENDING",
	DESCENDING: "DESCENDING",
}

type MultiTenantIdentityGroupSortKeyEnum string

var MultiTenantIdentityGroupSortKeyEnumTypes = struct {
	AUTHENTICATION_DOMAIN_ID MultiTenantIdentityGroupSortKeyEnum
	ID                       MultiTenantIdentityGroupSortKeyEnum
	NAME                     MultiTenantIdentityGroupSortKeyEnum
}{
	AUTHENTICATION_DOMAIN_ID: "AUTHENTICATION_DOMAIN_ID",
	ID:                       "ID",
	NAME:                     "NAME",
}
