package job

import (
	"github.com/newrelic/newrelic-client-go/v2/internal/http"
	"github.com/newrelic/newrelic-client-go/v2/pkg/config"
	"github.com/newrelic/newrelic-client-go/v2/pkg/logging"
)

type Job struct {
	client http.Client
	logger logging.Logger
	config config.Config
}

func New(config config.Config) Job {
	client := http.NewClient(config)

	pkg := Job{
		client: client,
		logger: config.GetLogger(),
		config: config,
	}
	return pkg
}

// The following types should have been generated by tutone, somehow that didn't happen.
type OrganizationOrganizationCreateAsyncResultFilterInput struct {
	// Filter jobs by customer ID.
	CustomerID *JobCustomerIDInput `json:"customer_id,omitempty"`
	// Filter jobs by job ID.
	JobID *JobJobIDInput `json:"job_id,omitempty"`
	// Filter jobs by status.
	Status *JobStatusInput `json:"status,omitempty"`
}

type JobCustomerIDInput struct {
	// A customer ID
	Eq string `json:"eq,omitempty"`
}

type JobJobIDInput struct {
	// A job ID
	Eq string   `json:"eq,omitempty"`
	In []string `json:"in,omitempty"`
}

type JobStatusInput struct {
	// A status
	Eq OrganizationOrganizationCreateJobResultStatusEnum   `json:"eq,omitempty"`
	In []OrganizationOrganizationCreateJobResultStatusEnum `json:"in,omitempty"`
}
