// Code generated by tutone: DO NOT EDIT
package organization

// OrganizationRegionCodeEnum - Enums for region codes
type OrganizationRegionCodeEnum string

var OrganizationRegionCodeEnumTypes = struct {
	// Region code for EU
	EU01 OrganizationRegionCodeEnum
	// Region code for US
	US01 OrganizationRegionCodeEnum
}{
	// Region code for EU
	EU01: "EU01",
	// Region code for US
	US01: "US01",
}

// CustomerAdministration - The `CustomerAdministration` object contains fields for managing the configuration that defines the business relationships between New Relic, partners, and customers.
type CustomerAdministration struct {
	// Accessible organizations
	Organizations OrganizationCustomerOrganizationWrapper `json:"organizations,omitempty"`
}

// OrganizationCreateOrganizationInput - Attributes belonging to the organization to create.
type OrganizationCreateOrganizationInput struct {
	// The name for the new organization.
	Name string `json:"name"`
}

// OrganizationCreateOrganizationResponse - The object that's returned from successfully creating an organization.
type OrganizationCreateOrganizationResponse struct {
	// The job id of the organization creation task; query this job id to get latest state
	JobId string `json:"jobId"`
}

// OrganizationCreateSharedAccountInput - Attributes for creating a shared account.
type OrganizationCreateSharedAccountInput struct {
	// The id of the account to be shared
	AccountID int `json:"accountId"`
	// The id of the limiting role
	LimitingRoleId int `json:"limitingRoleId"`
	// The name of the shared account
	Name string `json:"name,omitempty"`
	// The id of the target organization
	TargetOrganizationId string `json:"targetOrganizationId"`
}

// OrganizationCreateSharedAccountResponse - The object that's returned from successfully creating a shared account.
type OrganizationCreateSharedAccountResponse struct {
	// The created shared account.
	SharedAccount OrganizationSharedAccount `json:"sharedAccount,omitempty"`
}

// OrganizationCustomerOrganization - A customer organization
type OrganizationCustomerOrganization struct {
	// The ID of the organization group
	ContractId string `json:"contractId,omitempty"`
	// The ID of the customer
	CustomerId string `json:"customerId,omitempty"`
	// The ID of the organization
	ID string `json:"id"`
	// The name of the organization
	Name string `json:"name,omitempty"`
}

// OrganizationCustomerOrganizationWrapper - A customer organization
type OrganizationCustomerOrganizationWrapper struct {
	// Accessible customers
	Items []OrganizationCustomerOrganization `json:"items"`
	// an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages
	NextCursor string `json:"nextCursor,omitempty"`
}

// OrganizationNewManagedAccountInput - Attributes for creating a new managed account.
type OrganizationNewManagedAccountInput struct {
	// The name of the new account to be created.
	Name string `json:"name,omitempty"`
	// The region-code for the account to be created.
	RegionCode OrganizationRegionCodeEnum `json:"regionCode,omitempty"`
}

// OrganizationSharedAccount - The attributes of an account share.
type OrganizationSharedAccount struct {
	// The ID of the account being shared.
	AccountID int `json:"accountId"`
	// The ID of the account share.
	ID string `json:"id"`
	// The ID of the limiting role for the account share.
	LimitingRoleId int `json:"limitingRoleId"`
	// The name of the account share.
	Name string `json:"name,omitempty"`
	// The ID of the organization sending the account share.
	SourceOrganizationId string `json:"sourceOrganizationId"`
	// The name of the organization sending the account share.
	SourceOrganizationName string `json:"sourceOrganizationName,omitempty"`
	// The ID of the organization receiving the account share.
	TargetOrganizationId string `json:"targetOrganizationId"`
	// The name of the organization receiving the account share.
	TargetOrganizationName string `json:"targetOrganizationName,omitempty"`
}

// OrganizationSharedAccountInput - Attributes for creating an account share.
type OrganizationSharedAccountInput struct {
	// The id of the account to share with new organization
	AccountID int `json:"accountId"`
	// The limiting role id the new organization will be granted on for the shared account
	LimitingRoleId int `json:"limitingRoleId,omitempty"`
}

type organizationsResponse struct {
	CustomerAdministration CustomerAdministration `json:"customerAdministration"`
}
