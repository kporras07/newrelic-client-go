// Code generated by tutone: DO NOT EDIT
package jobs

// OrganizationOrganizationCreateJobResultStatusEnum - The possible status values for job results
type OrganizationOrganizationCreateJobResultStatusEnum string

var OrganizationOrganizationCreateJobResultStatusEnumTypes = struct {
	// Jobs that have been created but not yet started running
	CREATED OrganizationOrganizationCreateJobResultStatusEnum
	// Jobs that have failed and stopped running
	FAILED OrganizationOrganizationCreateJobResultStatusEnum
	// Jobs that are still running
	RUNNING OrganizationOrganizationCreateJobResultStatusEnum
	// Jobs that completed successfully
	SUCCEEDED OrganizationOrganizationCreateJobResultStatusEnum
}{
	// Jobs that have been created but not yet started running
	CREATED: "CREATED",
	// Jobs that have failed and stopped running
	FAILED: "FAILED",
	// Jobs that are still running
	RUNNING: "RUNNING",
	// Jobs that completed successfully
	SUCCEEDED: "SUCCEEDED",
}

// OrganizationOrganizationCreateJobStatusEnum - The list of valid job statuses to search for
type OrganizationOrganizationCreateJobStatusEnum string

var OrganizationOrganizationCreateJobStatusEnumTypes = struct {
	// All jobs regardless of status
	ALL OrganizationOrganizationCreateJobStatusEnum
	// Jobs that have been created but not yet started running
	CREATED OrganizationOrganizationCreateJobStatusEnum
	// Jobs that have failed and stopped running
	FAILED OrganizationOrganizationCreateJobStatusEnum
	// Jobs that are still running
	RUNNING OrganizationOrganizationCreateJobStatusEnum
	// Jobs that completed successfully
	SUCCEEDED OrganizationOrganizationCreateJobStatusEnum
}{
	// All jobs regardless of status
	ALL: "ALL",
	// Jobs that have been created but not yet started running
	CREATED: "CREATED",
	// Jobs that have failed and stopped running
	FAILED: "FAILED",
	// Jobs that are still running
	RUNNING: "RUNNING",
	// Jobs that completed successfully
	SUCCEEDED: "SUCCEEDED",
}

// CustomerAdministration - The `CustomerAdministration` object contains fields for managing the configuration that defines the business relationships between New Relic, partners, and customers.
type CustomerAdministration struct {
	// This provides access to fields you can use to check the status of asynchronous jobs related to customer administration.
	Jobs CustomerAdministrationJobs `json:"jobs,omitempty"`
}

type CustomerAdministrationJobs struct {
	// Organization Create job results
	OrganizationCreateAsyncResults OrganizationOrganizationCreateAsyncResultCollection `json:"organizationCreateAsyncResults,omitempty"`
}

// OrganizationOrganizationCreateAsyncCustomerResult - An async organization creation result customer
type OrganizationOrganizationCreateAsyncCustomerResult struct {
	// The customer ID
	CustomerId string `json:"customerId,omitempty"`
}

// OrganizationOrganizationCreateAsyncJobResult - An async organization creation job result
type OrganizationOrganizationCreateAsyncJobResult struct {
	// The date and time the job was created in UTC
	CreatedUtc string `json:"createdUtc"`
	// The error message in case of job failure
	ErrorMessage string `json:"errorMessage,omitempty"`
	// The date and time the job was completed in UTC
	FinishedUtc string `json:"finishedUtc,omitempty"`
	// The id of the job
	ID string `json:"id"`
	// The status of the job
	Status OrganizationOrganizationCreateJobResultStatusEnum `json:"status"`
}

// OrganizationOrganizationCreateAsyncOrganizationResult - An async organization creation result organization
type OrganizationOrganizationCreateAsyncOrganizationResult struct {
	// Organization ID
	ID string `json:"id,omitempty"`
	// Organization name
	Name string `json:"name,omitempty"`
}

// OrganizationOrganizationCreateAsyncResult - An async organization creation result
type OrganizationOrganizationCreateAsyncResult struct {
	// Organization Creation Async Job Customer
	Customer OrganizationOrganizationCreateAsyncCustomerResult `json:"customer,omitempty"`
	// Organization Creation Async Job Result
	Job OrganizationOrganizationCreateAsyncJobResult `json:"job"`
	// Organization Creation Async Job Organization
	Organization OrganizationOrganizationCreateAsyncOrganizationResult `json:"organization,omitempty"`
}

// OrganizationOrganizationCreateAsyncResultCollection - Organization create async result collection
type OrganizationOrganizationCreateAsyncResultCollection struct {
	// Organization create async results
	Items []OrganizationOrganizationCreateAsyncResult `json:"items"`
	// an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages
	NextCursor string `json:"nextCursor,omitempty"`
}

// OrganizationOrganizationCreateAsyncResultFilterInput - A filter for organization create job results
type OrganizationOrganizationCreateAsyncResultFilterInput struct {
	// Filter organization create job results by customer ID
	CustomerId OrganizationOrganizationCreateJobCustomerIdInput `json:"customerId,omitempty"`
	// Filter oganization create job results by id
	JobId OrganizationOrganizationCreateJobIdInput `json:"jobId,omitempty"`
	// Filter organization create job results by status
	Status OrganizationOrganizationCreateJobStatusInput `json:"status,omitempty"`
}

// OrganizationOrganizationCreateJobCustomerIdInput - The customer id search for jobs
type OrganizationOrganizationCreateJobCustomerIdInput struct {
	// A customer id to search for jobs in
	Eq string `json:"eq"`
}

// OrganizationOrganizationCreateJobIdInput - The id of the job to retrieve
type OrganizationOrganizationCreateJobIdInput struct {
	// An organization create job id
	Eq string `json:"eq,omitempty"`
	// A set of job ids to search for
	In []string `json:"in"`
}

// OrganizationOrganizationCreateJobStatusInput - The status of the jobs to search for
type OrganizationOrganizationCreateJobStatusInput struct {
	// a job status to search for
	Eq OrganizationOrganizationCreateJobStatusEnum `json:"eq,omitempty"`
	// a set of job statuses to search for
	In []OrganizationOrganizationCreateJobStatusEnum `json:"in"`
}

type organizationCreateAsyncResultsResponse struct {
	CustomerAdministration CustomerAdministration `json:"customerAdministration"`
}
